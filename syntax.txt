(* EBNF for our syntax, can test here: https://mdkrajnak.github.io/ebnftest/ *)
expression ::= literal | unary | binary | grouping;

literal ::= number | identifier;

identifier ::= alpha, { alpha | digit };

number ::= integer | floating_point;

integer        ::= digit { digit };
floating_point ::= integer, ".", integer;

unary ::= "-", expression;

binary ::= expression, operator, expression;

grouping ::= open_brace, expression, close_brace;

operator    ::= "+" | "-" | "*" | "/";
open_brace  ::= "(";
close_brace ::= ")";

digit  ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L"
         | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X"
         | "Y" | "Z"
         | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l"
         | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x"
         | "y" | "z" ;
alpha ::= letter | "_";
